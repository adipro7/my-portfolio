/**
 * @fileoverview added by tsickle
 * Generated from: lib/pdf-dummy-components/pdf-dummy-components.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
/**
 * List of all field that can be customized
 * @type {?}
 */
var requiredIds = [
    'toolbarViewer',
    'numPages',
    'pageNumber',
    'scaleSelectContainer',
    'customScaleOption',
    'previous',
    'next',
    'zoomIn',
    'zoomOut',
    'viewFind',
    'openFile',
    'print',
    'presentationMode',
    'download',
    'viewBookmark',
    'secondaryToolbar',
    'secondaryToolbarToggle',
    'secondaryToolbarButtonContainer',
    'secondaryPresentationMode',
    'secondaryOpenFile',
    'secondaryPrint',
    'secondaryDownload',
    'secondaryViewBookmark',
    'firstPage',
    'lastPage',
    'pageRotateCw',
    'pageRotateCcw',
    'cursorSelectTool',
    'cursorHandTool',
    'scrollVertical',
    'scrollHorizontal',
    'scrollWrapped',
    'spreadNone',
    'spreadOdd',
    'spreadEven',
    'documentProperties',
    'contextFirstPage',
    'contextLastPage',
    'contextPageRotateCw',
    'contextPageRotateCcw',
    'outerContainer',
    'viewerContainer',
    'sidebarToggle',
    'viewThumbnail',
    'viewOutline',
    'viewAttachments',
    'thumbnailView',
    'outlineView',
    'attachmentsView',
    'outerContainer',
    'sidebarResizer',
    'findbar',
    'viewFind',
    'findInput',
    'findInputMultiline',
    'findHighlightAll',
    'findMatchCase',
    'findEntireWord',
    'findMultipleSearchTexts',
    'findIgnoreAccents',
    'findMsg',
    'findResultsCount',
    'findPrevious',
    'findNext',
    'findFuzzy',
    'passwordOverlay',
    'passwordText',
    'password',
    'passwordSubmit',
    'passwordCancel',
    'documentPropertiesOverlay',
    'documentPropertiesClose',
    'fileNameField',
    'fileSizeField',
    'titleField',
    'authorField',
    'subjectField',
    'keywordsField',
    'creationDateField',
    'modificationDateField',
    'creatorField',
    'producerField',
    'versionField',
    'pageCountField',
    'pageSizeField',
    'linearizedField',
    'errorWrapper',
    'errorMessage',
    'errorClose',
    'errorMoreInfo',
    'errorShowMore',
    'errorShowLess',
    'scaleSelectContainer'
];
var PdfDummyComponentsComponent = /** @class */ (function () {
    function PdfDummyComponentsComponent() {
    }
    /**
     * @return {?}
     */
    PdfDummyComponentsComponent.prototype.addMissingStandardWidgets = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dummyComponentsContainer = document.getElementsByClassName('dummy-pdf-viewer-components')[0];
        /** @type {?} */
        var container = (/** @type {?} */ (this.dummyComponentsContainer));
        if (container) {
            for (var i = 0; i < container.children.length; i++) {
                /** @type {?} */
                var child = container.firstChild;
                if (child) {
                    container.removeChild(child);
                }
            }
        }
        requiredIds.forEach((/**
         * @param {?} id
         * @return {?}
         */
        function (id) {
            if (_this.needsDummyWidget(id)) {
                /** @type {?} */
                var dummy = document.createElement('span');
                dummy.id = id;
                dummy.className = 'invisible dummy-component';
                _this.dummyComponentsContainer.appendChild(dummy);
            }
        }));
        if (this.needsDummyWidget('scaleSelect')) {
            /** @type {?} */
            var dummy = document.createElement('select');
            dummy.id = 'scaleSelect';
            dummy.className = 'invisible dummy-component';
            this.dummyComponentsContainer.appendChild(dummy);
        }
    };
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    PdfDummyComponentsComponent.prototype.needsDummyWidget = /**
     * @private
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var widget = document.getElementById(id);
        if (!widget) {
            return true;
        }
        return false;
    };
    PdfDummyComponentsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'pdf-dummy-components',
                    template: "<span class=\"invisible dummy-pdf-viewer-components\">\n</span>\n"
                }] }
    ];
    return PdfDummyComponentsComponent;
}());
export { PdfDummyComponentsComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PdfDummyComponentsComponent.prototype.dummyComponentsContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLWR1bW15LWNvbXBvbmVudHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWV4dGVuZGVkLXBkZi12aWV3ZXIvIiwic291cmNlcyI6WyJsaWIvcGRmLWR1bW15LWNvbXBvbmVudHMvcGRmLWR1bW15LWNvbXBvbmVudHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7SUFHcEMsV0FBVyxHQUFHO0lBQ2xCLGVBQWU7SUFDZixVQUFVO0lBQ1YsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLE1BQU07SUFDTixRQUFRO0lBQ1IsU0FBUztJQUNULFVBQVU7SUFDVixVQUFVO0lBQ1YsT0FBTztJQUNQLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsY0FBYztJQUNkLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsaUNBQWlDO0lBQ2pDLDJCQUEyQjtJQUMzQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsV0FBVztJQUNYLFVBQVU7SUFDVixjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixlQUFlO0lBQ2YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFVBQVU7SUFDVixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiwyQkFBMkI7SUFDM0IseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixlQUFlO0lBQ2YsWUFBWTtJQUNaLGFBQWE7SUFDYixjQUFjO0lBQ2QsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsY0FBYztJQUNkLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGNBQWM7SUFDZCxZQUFZO0lBQ1osZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2Ysc0JBQXNCO0NBQ3ZCO0FBRUQ7SUFBQTtJQTJDQSxDQUFDOzs7O0lBcENRLCtEQUF5Qjs7O0lBQWhDO1FBQUEsaUJBMkJDO1FBMUJDLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxRQUFRLENBQUMsc0JBQXNCLENBQUMsNkJBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7WUFDNUYsU0FBUyxHQUFHLG1CQUFBLElBQUksQ0FBQyx3QkFBd0IsRUFBZTtRQUM5RCxJQUFJLFNBQVMsRUFBRTtZQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTs7b0JBQzVDLEtBQUssR0FBRyxTQUFTLENBQUMsVUFBVTtnQkFDbEMsSUFBSSxLQUFLLEVBQUU7b0JBQ1QsU0FBUyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDOUI7YUFDRjtTQUNGO1FBRUQsV0FBVyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLEVBQUU7WUFDcEIsSUFBSSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEVBQUU7O29CQUN2QixLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7Z0JBQzVDLEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO2dCQUNkLEtBQUssQ0FBQyxTQUFTLEdBQUcsMkJBQTJCLENBQUM7Z0JBQzlDLEtBQUksQ0FBQyx3QkFBd0IsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDbEQ7UUFDSCxDQUFDLEVBQUMsQ0FBQztRQUVILElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxFQUFFOztnQkFDbEMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQzlDLEtBQUssQ0FBQyxFQUFFLEdBQUcsYUFBYSxDQUFDO1lBQ3pCLEtBQUssQ0FBQyxTQUFTLEdBQUcsMkJBQTJCLENBQUM7WUFDOUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNsRDtJQUNILENBQUM7Ozs7OztJQUVPLHNEQUFnQjs7Ozs7SUFBeEIsVUFBeUIsRUFBVTs7WUFDM0IsTUFBTSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDO1FBQzFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOztnQkExQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLDZFQUFvRDtpQkFDckQ7O0lBd0NELGtDQUFDO0NBQUEsQUEzQ0QsSUEyQ0M7U0F2Q1ksMkJBQTJCOzs7Ozs7SUFDdEMsK0RBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKiBMaXN0IG9mIGFsbCBmaWVsZCB0aGF0IGNhbiBiZSBjdXN0b21pemVkICovXG5jb25zdCByZXF1aXJlZElkcyA9IFtcbiAgJ3Rvb2xiYXJWaWV3ZXInLFxuICAnbnVtUGFnZXMnLFxuICAncGFnZU51bWJlcicsXG4gICdzY2FsZVNlbGVjdENvbnRhaW5lcicsXG4gICdjdXN0b21TY2FsZU9wdGlvbicsXG4gICdwcmV2aW91cycsXG4gICduZXh0JyxcbiAgJ3pvb21JbicsXG4gICd6b29tT3V0JyxcbiAgJ3ZpZXdGaW5kJyxcbiAgJ29wZW5GaWxlJyxcbiAgJ3ByaW50JyxcbiAgJ3ByZXNlbnRhdGlvbk1vZGUnLFxuICAnZG93bmxvYWQnLFxuICAndmlld0Jvb2ttYXJrJyxcbiAgJ3NlY29uZGFyeVRvb2xiYXInLFxuICAnc2Vjb25kYXJ5VG9vbGJhclRvZ2dsZScsXG4gICdzZWNvbmRhcnlUb29sYmFyQnV0dG9uQ29udGFpbmVyJyxcbiAgJ3NlY29uZGFyeVByZXNlbnRhdGlvbk1vZGUnLFxuICAnc2Vjb25kYXJ5T3BlbkZpbGUnLFxuICAnc2Vjb25kYXJ5UHJpbnQnLFxuICAnc2Vjb25kYXJ5RG93bmxvYWQnLFxuICAnc2Vjb25kYXJ5Vmlld0Jvb2ttYXJrJyxcbiAgJ2ZpcnN0UGFnZScsXG4gICdsYXN0UGFnZScsXG4gICdwYWdlUm90YXRlQ3cnLFxuICAncGFnZVJvdGF0ZUNjdycsXG4gICdjdXJzb3JTZWxlY3RUb29sJyxcbiAgJ2N1cnNvckhhbmRUb29sJyxcbiAgJ3Njcm9sbFZlcnRpY2FsJyxcbiAgJ3Njcm9sbEhvcml6b250YWwnLFxuICAnc2Nyb2xsV3JhcHBlZCcsXG4gICdzcHJlYWROb25lJyxcbiAgJ3NwcmVhZE9kZCcsXG4gICdzcHJlYWRFdmVuJyxcbiAgJ2RvY3VtZW50UHJvcGVydGllcycsXG4gICdjb250ZXh0Rmlyc3RQYWdlJyxcbiAgJ2NvbnRleHRMYXN0UGFnZScsXG4gICdjb250ZXh0UGFnZVJvdGF0ZUN3JyxcbiAgJ2NvbnRleHRQYWdlUm90YXRlQ2N3JyxcbiAgJ291dGVyQ29udGFpbmVyJyxcbiAgJ3ZpZXdlckNvbnRhaW5lcicsXG4gICdzaWRlYmFyVG9nZ2xlJyxcbiAgJ3ZpZXdUaHVtYm5haWwnLFxuICAndmlld091dGxpbmUnLFxuICAndmlld0F0dGFjaG1lbnRzJyxcbiAgJ3RodW1ibmFpbFZpZXcnLFxuICAnb3V0bGluZVZpZXcnLFxuICAnYXR0YWNobWVudHNWaWV3JyxcbiAgJ291dGVyQ29udGFpbmVyJyxcbiAgJ3NpZGViYXJSZXNpemVyJyxcbiAgJ2ZpbmRiYXInLFxuICAndmlld0ZpbmQnLFxuICAnZmluZElucHV0JyxcbiAgJ2ZpbmRJbnB1dE11bHRpbGluZScsXG4gICdmaW5kSGlnaGxpZ2h0QWxsJyxcbiAgJ2ZpbmRNYXRjaENhc2UnLFxuICAnZmluZEVudGlyZVdvcmQnLFxuICAnZmluZE11bHRpcGxlU2VhcmNoVGV4dHMnLFxuICAnZmluZElnbm9yZUFjY2VudHMnLFxuICAnZmluZE1zZycsXG4gICdmaW5kUmVzdWx0c0NvdW50JyxcbiAgJ2ZpbmRQcmV2aW91cycsXG4gICdmaW5kTmV4dCcsXG4gICdmaW5kRnV6enknLFxuICAncGFzc3dvcmRPdmVybGF5JyxcbiAgJ3Bhc3N3b3JkVGV4dCcsXG4gICdwYXNzd29yZCcsXG4gICdwYXNzd29yZFN1Ym1pdCcsXG4gICdwYXNzd29yZENhbmNlbCcsXG4gICdkb2N1bWVudFByb3BlcnRpZXNPdmVybGF5JyxcbiAgJ2RvY3VtZW50UHJvcGVydGllc0Nsb3NlJyxcbiAgJ2ZpbGVOYW1lRmllbGQnLFxuICAnZmlsZVNpemVGaWVsZCcsXG4gICd0aXRsZUZpZWxkJyxcbiAgJ2F1dGhvckZpZWxkJyxcbiAgJ3N1YmplY3RGaWVsZCcsXG4gICdrZXl3b3Jkc0ZpZWxkJyxcbiAgJ2NyZWF0aW9uRGF0ZUZpZWxkJyxcbiAgJ21vZGlmaWNhdGlvbkRhdGVGaWVsZCcsXG4gICdjcmVhdG9yRmllbGQnLFxuICAncHJvZHVjZXJGaWVsZCcsXG4gICd2ZXJzaW9uRmllbGQnLFxuICAncGFnZUNvdW50RmllbGQnLFxuICAncGFnZVNpemVGaWVsZCcsXG4gICdsaW5lYXJpemVkRmllbGQnLFxuICAnZXJyb3JXcmFwcGVyJyxcbiAgJ2Vycm9yTWVzc2FnZScsXG4gICdlcnJvckNsb3NlJyxcbiAgJ2Vycm9yTW9yZUluZm8nLFxuICAnZXJyb3JTaG93TW9yZScsXG4gICdlcnJvclNob3dMZXNzJyxcbiAgJ3NjYWxlU2VsZWN0Q29udGFpbmVyJ1xuXTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncGRmLWR1bW15LWNvbXBvbmVudHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGRmLWR1bW15LWNvbXBvbmVudHMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBkZkR1bW15Q29tcG9uZW50c0NvbXBvbmVudCB7XG4gIHByaXZhdGUgZHVtbXlDb21wb25lbnRzQ29udGFpbmVyOiBFbGVtZW50O1xuXG4gIHB1YmxpYyBhZGRNaXNzaW5nU3RhbmRhcmRXaWRnZXRzKCk6IHZvaWQge1xuICAgIHRoaXMuZHVtbXlDb21wb25lbnRzQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZHVtbXktcGRmLXZpZXdlci1jb21wb25lbnRzJylbMF07XG4gICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5kdW1teUNvbXBvbmVudHNDb250YWluZXIgYXMgSFRNTEVsZW1lbnQ7XG4gICAgaWYgKGNvbnRhaW5lcikge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY2hpbGQgPSBjb250YWluZXIuZmlyc3RDaGlsZDtcbiAgICAgICAgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJlcXVpcmVkSWRzLmZvckVhY2goaWQgPT4ge1xuICAgICAgaWYgKHRoaXMubmVlZHNEdW1teVdpZGdldChpZCkpIHtcbiAgICAgICAgY29uc3QgZHVtbXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGR1bW15LmlkID0gaWQ7XG4gICAgICAgIGR1bW15LmNsYXNzTmFtZSA9ICdpbnZpc2libGUgZHVtbXktY29tcG9uZW50JztcbiAgICAgICAgdGhpcy5kdW1teUNvbXBvbmVudHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVtbXkpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMubmVlZHNEdW1teVdpZGdldCgnc2NhbGVTZWxlY3QnKSkge1xuICAgICAgY29uc3QgZHVtbXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbiAgICAgIGR1bW15LmlkID0gJ3NjYWxlU2VsZWN0JztcbiAgICAgIGR1bW15LmNsYXNzTmFtZSA9ICdpbnZpc2libGUgZHVtbXktY29tcG9uZW50JztcbiAgICAgIHRoaXMuZHVtbXlDb21wb25lbnRzQ29udGFpbmVyLmFwcGVuZENoaWxkKGR1bW15KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIG5lZWRzRHVtbXlXaWRnZXQoaWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHdpZGdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICBpZiAoIXdpZGdldCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuIl19