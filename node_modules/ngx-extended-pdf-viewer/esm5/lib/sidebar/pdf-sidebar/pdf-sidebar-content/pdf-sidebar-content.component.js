/**
 * @fileoverview added by tsickle
 * Generated from: lib/sidebar/pdf-sidebar/pdf-sidebar-content/pdf-sidebar-content.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';
/** @type {?} */
var THUMBNAIL_CANVAS_BORDER_WIDTH = 1;
// px
var PdfSidebarContentComponent = /** @class */ (function () {
    function PdfSidebarContentComponent() {
        var _this = this;
        this.thumbnailDrawn = new EventEmitter();
        ((/** @type {?} */ (window))).pdfThumbnailGeneratorReady = (/**
         * @return {?}
         */
        function () { return _this.pdfThumbnailGeneratorReady(); });
        ((/** @type {?} */ (window))).pdfThumbnailGenerator = (/**
         * @param {?} pdfThumbnailView
         * @param {?} linkService
         * @param {?} id
         * @param {?} container
         * @param {?} thumbPageTitlePromise
         * @return {?}
         */
        function (pdfThumbnailView, linkService, id, container, thumbPageTitlePromise) { return _this.createThumbnail(pdfThumbnailView, linkService, id, container, thumbPageTitlePromise); });
    }
    /**
     * @return {?}
     */
    PdfSidebarContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.linkService = undefined;
    };
    /**
     * @return {?}
     */
    PdfSidebarContentComponent.prototype.pdfThumbnailGeneratorReady = /**
     * @return {?}
     */
    function () {
        if (!this.thumbnailViewTemplate) {
            return false;
        }
        /** @type {?} */
        var t = (/** @type {?} */ (this.thumbnailViewTemplate.nativeElement));
        return !!t && !!t.innerHTML && t.innerHTML.length > 0;
    };
    /**
     * @private
     * @param {?} pdfThumbnailView
     * @param {?} linkService
     * @param {?} id
     * @param {?} container
     * @param {?} thumbPageTitlePromise
     * @return {?}
     */
    PdfSidebarContentComponent.prototype.createThumbnail = /**
     * @private
     * @param {?} pdfThumbnailView
     * @param {?} linkService
     * @param {?} id
     * @param {?} container
     * @param {?} thumbPageTitlePromise
     * @return {?}
     */
    function (pdfThumbnailView, linkService, id, container, thumbPageTitlePromise) {
        this.linkService = linkService;
        /** @type {?} */
        var template = this.thumbnailViewTemplate;
        // get the inner HTML without the attributes and classes added by Angular
        /** @type {?} */
        var inner = template.nativeElement.innerHTML
            .split(/_ng\w+-\w+-\w+=""/g).join('')
            .split(/ng-\w+-\w+/g).join('')
            .split(/<!--[\s\S]*?-->/g).join('');
        /** @type {?} */
        var borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;
        /** @type {?} */
        var widthOfRing = pdfThumbnailView.canvasWidth + borderAdjustment + 'px';
        /** @type {?} */
        var heightOfRing = pdfThumbnailView.canvasHeight + borderAdjustment + 'px';
        /** @type {?} */
        var newHtml = inner.split('WIDTH_OF_RING').join(widthOfRing).split('HEIGHT_OF_RING').join(heightOfRing).split('PAGE_NUMBER').join(id);
        /** @type {?} */
        var newElement = this.createElementFromHTML(newHtml);
        newElement.classList.remove('pdf-viewer-template');
        /** @type {?} */
        var anchor = (/** @type {?} */ (newElement));
        anchor.href = linkService.getAnchorUrl('#page=' + id);
        thumbPageTitlePromise.then((/**
         * @param {?} msg
         * @return {?}
         */
        function (msg) {
            anchor.title = msg;
        }));
        anchor.onclick = (/**
         * @return {?}
         */
        function () {
            linkService.page = id;
            return false;
        });
        pdfThumbnailView.anchor = anchor;
        /** @type {?} */
        var ring = (/** @type {?} */ (newElement.getElementsByClassName('image-container')[0]));
        pdfThumbnailView.ring = ring;
        pdfThumbnailView.div = (/** @type {?} */ (newElement.getElementsByClassName('thumbnail')[0]));
        container.appendChild(newElement);
        /** @type {?} */
        var thumbnailDrawnEvent = {
            thumbnail: newElement,
            container: container,
            pageId: id
        };
        this.thumbnailDrawn.emit(thumbnailDrawnEvent);
    };
    /**
     * @private
     * @param {?} htmlString
     * @return {?}
     */
    PdfSidebarContentComponent.prototype.createElementFromHTML = /**
     * @private
     * @param {?} htmlString
     * @return {?}
     */
    function (htmlString) {
        /** @type {?} */
        var div = document.createElement('div');
        div.innerHTML = htmlString.trim();
        // Change this to div.childNodes to support multiple top-level nodes
        return (/** @type {?} */ (div.firstChild));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PdfSidebarContentComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.code === 'ArrowDown') {
            if (this.linkService) {
                if (event.ctrlKey || event.metaKey) {
                    this.linkService.page = this.linkService.pagesCount;
                }
                else if (this.linkService.page < this.linkService.pagesCount) {
                    this.linkService.page = this.linkService.page + 1;
                }
                event.preventDefault();
            }
        }
        else if (event.code === 'ArrowUp') {
            if (this.linkService) {
                if (event.ctrlKey || event.metaKey) {
                    this.linkService.page = 1;
                }
                else if (this.linkService.page > 1) {
                    this.linkService.page = this.linkService.page - 1;
                }
                event.preventDefault();
            }
        }
    };
    PdfSidebarContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'pdf-sidebar-content',
                    template: "<div id=\"sidebarContent\">\n  <div #thumbnailViewTemplate>\n    <ng-content *ngTemplateOutlet=\"customThumbnail ? customThumbnail : defaultThumbnail\"></ng-content>\n  </div>\n  <div id=\"thumbnailView\" (keydown)=\"onKeyDown($event)\"></div>\n  <div id=\"outlineView\" class=\"hidden\"></div>\n  <div id=\"attachmentsView\" class=\"hidden\"></div>\n</div>\n\n<ng-template #defaultThumbnail>\n  <a class=\"pdf-viewer-template\">\n    <div class=\"thumbnail\" data-page-number=\"$page\">\n      <div class=\"thumbnailSelectionRing image-container\" style=\"width: WIDTH_OF_RING; height: HEIGHT_OF_RING;\">\n        <!-- image is automatically inserted here -->\n        <!-- <img class=\"thumbnailImage\" style=\"width: 98px; height: 73px;\" /> -->\n      </div>\n    </div>\n  </a>\n</ng-template>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PdfSidebarContentComponent.ctorParameters = function () { return []; };
    PdfSidebarContentComponent.propDecorators = {
        customThumbnail: [{ type: Input }],
        thumbnailViewTemplate: [{ type: ViewChild, args: ['thumbnailViewTemplate',] }],
        thumbnailDrawn: [{ type: Output }]
    };
    return PdfSidebarContentComponent;
}());
export { PdfSidebarContentComponent };
if (false) {
    /** @type {?} */
    PdfSidebarContentComponent.prototype.customThumbnail;
    /** @type {?} */
    PdfSidebarContentComponent.prototype.thumbnailViewTemplate;
    /**
     * @type {?}
     * @private
     */
    PdfSidebarContentComponent.prototype.linkService;
    /** @type {?} */
    PdfSidebarContentComponent.prototype.thumbnailDrawn;
}
//# sourceMappingURL=data:application/json;base64,